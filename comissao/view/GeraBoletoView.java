/*
 * GeraBoletoView.java
 *
 * Created on 4 de Agosto de 2008, 00:59
 */
package comissao.view;

import java.text.DateFormat;
import java.text.ParseException;
import comissao.controller.ConfiguracaoController;
import comissao.controller.AlunoController;
import comissao.controller.BoletoController;
import comissao.util.Moeda;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author  clayton
 */
public class GeraBoletoView extends javax.swing.JDialog {

    /** Creates new form GeraBoletoView */
    public GeraBoletoView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnGerar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnFechar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtData = new javax.swing.JFormattedTextField();
        lblMensagem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Geração de Boletos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jToolBar1.setBorder(null);
        jToolBar1.setFloatable(false);
        jToolBar1.setName("jToolBar1"); // NOI18N

        btnGerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/comissao/view/images/filesave-32.png"))); // NOI18N
        btnGerar.setText("Gerar boletos");
        btnGerar.setFocusable(false);
        btnGerar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGerar.setName("btnGerar"); // NOI18N
        btnGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGerar);

        jSeparator3.setName("jSeparator3"); // NOI18N
        jToolBar1.add(jSeparator3);

        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/comissao/view/images/exit-32.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.setFocusable(false);
        btnFechar.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btnFechar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnFechar.setName("btnFechar"); // NOI18N
        btnFechar.setVerifyInputWhenFocusTarget(false);
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });
        jToolBar1.add(btnFechar);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText("Data:");
        jLabel1.setName("jLabel1"); // NOI18N

        txtData.setName("txtData"); // NOI18N
        txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataActionPerformed(evt);
            }
        });
        txtData.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataFocusLost(evt);
            }
        });

        lblMensagem.setText("      ");
        lblMensagem.setName("lblMensagem"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMensagem)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(385, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMensagem))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarActionPerformed
// TODO add your handling code here:

    ConfiguracaoController config = new ConfiguracaoController();
    AlunoController alunos = new AlunoController();
    BoletoController boleto = new BoletoController();


    int NroBoletosGerados = config.getConfiguracao().getNroBoletosGerados();
    int Meses = config.getConfiguracao().getNroMeses();

    if (NroBoletosGerados < Meses) {

        for (int i = 0; i < alunos.getAlunos().size(); i++) {

            int Codigoaluno = Integer.parseInt(alunos.getAlunos().get(i).getId());

            SimpleDateFormat formatoData = new SimpleDateFormat("dd/MM/yyyy");
            try {
                Date dataEmisao = formatoData.parse(txtData.getText());

                if (!boleto.consultaBoleto(Codigoaluno, dataEmisao)) {

                    ArrayList<String> dadosBoleto = new ArrayList<String>();

                    dadosBoleto.add(null);
                    dadosBoleto.add(Integer.toString(Codigoaluno));
                    dadosBoleto.add(Float.toString(config.getConfiguracao().getValorMensalidade()));
                    dadosBoleto.add("-1");
                    dadosBoleto.add(txtData.getText());

                    if (boleto.salvar(dadosBoleto)) {
                        String valorBoleto = Moeda.FORMATO_REAL.format(config.getConfiguracao().getValorMensalidade());
                        objTableModel.addRow(new Object[]{alunos.getAlunos().get(i).getNome(), valorBoleto, txtData.getText()});
                        jTable1.setModel(objTableModel);
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro. Tente Novamente ou Contate o Administrador do Sistema", "Mensagem", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Erro: Boleto já foi gerado para o aluno " + alunos.getAlunos().get(i).getNome(), "Mensagem", JOptionPane.ERROR_MESSAGE);
                }
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "Erro. Tente Novamente ou Contate o Administrador do Sistema", "Mensagem", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }

        lblMensagem.setText("Boletos Gerados!");

    } else {
        JOptionPane.showMessageDialog(null, "Todos os boletos já foram gerados. Verifique se foram emitidos");
    }

}//GEN-LAST:event_btnGerarActionPerformed

private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
// TODO add your handling code here:
    saida = true;
    this.setVisible(false);
    this.dispose();
}//GEN-LAST:event_btnFecharActionPerformed

private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
// TODO add your handling code here:
    Vector<String> vetColunas = new Vector<String>();
    vetColunas.addElement("Aluno");
    vetColunas.addElement("Valor");
    vetColunas.addElement("Data de Emissão");
    objTableModel = new DefaultTableModel(vetColunas, 0);
    jTable1.setModel(objTableModel);
    try {
        MaskFormatter formataData = new MaskFormatter("##/##/####");
        formataData.setValidCharacters("0123456789Hh");
        txtData.setFormatterFactory(new DefaultFormatterFactory(formataData));
    } catch (Exception e) {
    }

}//GEN-LAST:event_formWindowActivated

private void txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataActionPerformed
// TODO add your handling code here:
   
}//GEN-LAST:event_txtDataActionPerformed

private void txtDataFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataFocusLost
// TODO add your handling code here:
    if (!saida) {

        if (txtData.getText().equals("  /  /    ")) {
            JOptionPane.showMessageDialog(this, "O campo data é de preenchimento obrigatorio!", "Mensagem do Sistema", JOptionPane.INFORMATION_MESSAGE);
            txtData.requestFocus();
        } else {
            try {
                txtData.commitEdit();
                DateFormat formato = DateFormat.getDateInstance();
                formato.setLenient(false);
                formato.parse(txtData.getText().trim());
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(null, "Data Inválida.");
            }
        }
    }    
}//GEN-LAST:event_txtDataFocusLost

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GeraBoletoView dialog = new GeraBoletoView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    DefaultTableModel objTableModel;
    boolean saida = false;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnGerar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblMensagem;
    private javax.swing.JFormattedTextField txtData;
    // End of variables declaration//GEN-END:variables

}
